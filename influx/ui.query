{
 "meta": {
  "version": "1",
  "type": "dashboard",
  "name": "Covid Dashboards-Template",
  "description": "template created from dashboard: Covid Dashboards"
 },
 "content": {
  "data": {
   "type": "dashboard",
   "attributes": {
    "name": "Covid Dashboards",
    "description": ""
   },
   "relationships": {
    "label": {
     "data": []
    },
    "cell": {
     "data": [
      {
       "type": "cell",
       "id": "05b3f6439b6f8000"
      },
      {
       "type": "cell",
       "id": "05b417e4f82f8000"
      },
      {
       "type": "cell",
       "id": "05b4c93140af8000"
      },
      {
       "type": "cell",
       "id": "05b4cce2f92f8000"
      },
      {
       "type": "cell",
       "id": "05b4d742fe6f8000"
      },
      {
       "type": "cell",
       "id": "05b6a7354e12a000"
      },
      {
       "type": "cell",
       "id": "05b6a7561692a000"
      },
      {
       "type": "cell",
       "id": "05b6a8a498d2a000"
      },
      {
       "type": "cell",
       "id": "05b6e86fb092a000"
      },
      {
       "type": "cell",
       "id": "05b892e6741dd000"
      },
      {
       "type": "cell",
       "id": "05b8943a655dd000"
      },
      {
       "type": "cell",
       "id": "05ba7b9be9404000"
      }
     ]
    },
    "variable": {
     "data": [
      {
       "type": "variable",
       "id": "05b6a9df4f52a000"
      },
      {
       "type": "variable",
       "id": "05ba8608dd804000"
      },
      {
       "type": "variable",
       "id": "05ba865f63c04000"
      },
      {
       "type": "variable",
       "id": "05ba86cc01404000"
      }
     ]
    }
   }
  },
  "included": [
   {
    "type": "label",
    "id": "05baaeb1394df000",
    "attributes": {
     "name": "test",
     "properties": {
      "color": "#ce58eb",
      "description": ""
     }
    }
   },
   {
    "id": "05b3f6439b6f8000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 7,
     "w": 12,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "05b3f6439b6f8000"
      }
     }
    }
   },
   {
    "id": "05b417e4f82f8000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 0,
     "w": 12,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "05b417e4f82f8000"
      }
     }
    }
   },
   {
    "id": "05b4c93140af8000",
    "type": "cell",
    "attributes": {
     "x": 6,
     "y": 19,
     "w": 6,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "05b4c93140af8000"
      }
     }
    }
   },
   {
    "id": "05b4cce2f92f8000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 19,
     "w": 6,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "05b4cce2f92f8000"
      }
     }
    }
   },
   {
    "id": "05b4d742fe6f8000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 27,
     "w": 12,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "05b4d742fe6f8000"
      }
     }
    }
   },
   {
    "id": "05b6a7354e12a000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 15,
     "w": 6,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "05b6a7354e12a000"
      }
     }
    }
   },
   {
    "id": "05b6a7561692a000",
    "type": "cell",
    "attributes": {
     "x": 6,
     "y": 15,
     "w": 6,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "05b6a7561692a000"
      }
     }
    }
   },
   {
    "id": "05b6a8a498d2a000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 11,
     "w": 6,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "05b6a8a498d2a000"
      }
     }
    }
   },
   {
    "id": "05b6e86fb092a000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 23,
     "w": 12,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "05b6e86fb092a000"
      }
     }
    }
   },
   {
    "id": "05b892e6741dd000",
    "type": "cell",
    "attributes": {
     "x": 6,
     "y": 11,
     "w": 3,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "05b892e6741dd000"
      }
     }
    }
   },
   {
    "id": "05b8943a655dd000",
    "type": "cell",
    "attributes": {
     "x": 9,
     "y": 11,
     "w": 3,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "05b8943a655dd000"
      }
     }
    }
   },
   {
    "id": "05ba7b9be9404000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 4,
     "w": 12,
     "h": 3
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "05ba7b9be9404000"
      }
     }
    }
   },
   {
    "type": "view",
    "id": "05b3f6439b6f8000",
    "attributes": {
     "name": "Divergence by Region",
     "properties": {
      "shape": "chronograf-v2",
      "type": "scatter",
      "queries": [
       {
        "text": "// Values to filter for\nfilter_values = [v.filter_values]\n\n// filtering field name\nfilter_field_name = v.filter_field_name\n\n// set drop columns\ndrop_cols = \n     if filter_field_name == \"country\"\n        then [\"region\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"region\"\n        then [\"country\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"division\"\n        then [\"country\",\"region\", \"first_strain\"]\n      else []\n\n// value flips the behavior from white list to blacklisat\ninclude_fields = (v.exclude == \"0\")\n\nfrom(bucket: \"test\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == v.Measurement)\n  |> filter(fn: (r) => r[\"_field\"] == \"divergence\")\n  |> filter(fn: (r) =>\n      if filter_field_name == \"country\"\n        then contains(value: r[\"country\"], set: filter_values) == include_fields\n      else if filter_field_name == \"region\"\n        then contains(value: r[\"region\"], set: filter_values) == include_fields\n      else if filter_field_name == \"division\"\n        then contains(value: r[\"division\"], set: filter_values) == include_fields\n      else true\n  )\n|> drop(columns: drop_cols)\n    \n  ",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [],
         "aggregateWindow": {
          "period": "auto"
         }
        }
       }
      ],
      "colors": [
       "#31C0F6",
       "#A500A5",
       "#FF7E27"
      ],
      "fillColumns": [
       "_start",
       "_stop",
       "_field",
       "_measurement",
       "region"
      ],
      "symbolColumns": [
       "_start",
       "_stop",
       "_field",
       "_measurement",
       "region"
      ],
      "xColumn": "_time",
      "yColumn": "_value",
      "xAxisLabel": "",
      "yAxisLabel": "",
      "xPrefix": "",
      "xSuffix": "",
      "yPrefix": "",
      "ySuffix": "",
      "note": "",
      "showNoteWhenEmpty": false,
      "timeFormat": ""
     }
    }
   },
   {
    "type": "view",
    "id": "05b417e4f82f8000",
    "attributes": {
     "name": "Reported Strains by Regions",
     "properties": {
      "shape": "chronograf-v2",
      "queries": [
       {
        "text": "// Values to filter for\nfilter_values = [v.filter_values]\n\n// filtering field name\nfilter_field_name = v.filter_field_name\n\n\n// set drop columns\ndrop_cols = \n     if filter_field_name == \"country\"\n        then [\"region\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"region\"\n        then [\"country\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"division\"\n        then [\"country\",\"region\", \"first_strain\"]\n      else []\n\n// value flips the behavior from white list to blacklist\ninclude_fields = (v.exclude == \"0\")\n\nfrom(bucket: \"test\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == v.Measurement)\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) =>\n      if filter_field_name == \"country\"\n        then contains(value: r[\"country\"], set: filter_values) == include_fields\n      else if filter_field_name == \"region\"\n        then contains(value: r[\"region\"], set: filter_values) == include_fields\n      else if filter_field_name == \"division\"\n        then contains(value: r[\"division\"], set: filter_values) == include_fields\n      else true\n  )\n  |> drop(columns: drop_cols)\n  |> aggregateWindow(\n    every: 24h,\n    fn: count\n  )",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [],
         "aggregateWindow": {
          "period": "auto"
         }
        }
       }
      ],
      "axes": {
       "x": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       },
       "y": {
        "bounds": [
         "",
         ""
        ],
        "label": "Infection Count",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       }
      },
      "type": "xy",
      "legend": {},
      "geom": "line",
      "colors": [
       {
        "id": "d48ee11d-cb57-48b1-8729-8a54feaa77a5",
        "type": "scale",
        "hex": "#FD7A5D",
        "name": "Delorean",
        "value": 0
       },
       {
        "id": "d82c059e-76a9-4c09-a63e-698c58f0f028",
        "type": "scale",
        "hex": "#5F1CF2",
        "name": "Delorean",
        "value": 0
       },
       {
        "id": "4c3d6381-4f96-4c80-8b7c-39c1c98dd321",
        "type": "scale",
        "hex": "#4CE09A",
        "name": "Delorean",
        "value": 0
       }
      ],
      "note": "",
      "showNoteWhenEmpty": false,
      "xColumn": "_time",
      "yColumn": "_value",
      "shadeBelow": true,
      "position": "overlaid",
      "timeFormat": "YYYY/MM/DD HH:mm:ss"
     }
    }
   },
   {
    "type": "view",
    "id": "05b4c93140af8000",
    "attributes": {
     "name": "Known Strains by Region",
     "properties": {
      "shape": "chronograf-v2",
      "queries": [
       {
        "text": "\n// Values to filter for\nfilter_values = [v.filter_values]\n\n// filtering field name\nfilter_field_name = v.filter_field_name\n\n// set drop columns\ndrop_cols = \n     if filter_field_name == \"country\"\n        then [\"region\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"region\"\n        then [\"country\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"division\"\n        then [\"country\",\"region\", \"first_strain\"]\n      else []\n\n// value flips the behavior from white list to blacklist\ninclude_fields = (v.exclude == \"0\")\n\nfrom(bucket: \"test\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == v.Measurement)\n  |> filter(fn: (r) => r[\"_field\"] == \"strainname\")\n  |> filter(fn: (r) => r[\"first_strain\"] == \"0\")\n  |> filter(fn: (r) =>\n      if filter_field_name == \"country\"\n        then contains(value: r[\"country\"], set: filter_values) == include_fields\n      else if filter_field_name == \"region\"\n        then contains(value: r[\"region\"], set: filter_values) == include_fields\n      else if filter_field_name == \"division\"\n        then contains(value: r[\"division\"], set: filter_values) == include_fields\n      else true\n  )\n  |> drop(columns: drop_cols)\n  |> window(every: 1h)\n  |> count()\n  |> duplicate(column: \"_stop\", as: \"_time\")\n  |> window(every: inf)",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [],
         "aggregateWindow": {
          "period": "auto"
         }
        }
       }
      ],
      "axes": {
       "x": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       },
       "y": {
        "bounds": [
         "",
         ""
        ],
        "label": "Infection Count",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       }
      },
      "type": "xy",
      "legend": {},
      "geom": "line",
      "colors": [
       {
        "id": "a26cda87-1a89-4e05-9a28-bc95aa5d9f05",
        "type": "scale",
        "hex": "#31C0F6",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "52334ffe-6a0b-42f7-89b8-11ca2c7b00fb",
        "type": "scale",
        "hex": "#A500A5",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "d54153a3-a1e9-4c43-ad0a-79190d987932",
        "type": "scale",
        "hex": "#FF7E27",
        "name": "Nineteen Eighty Four",
        "value": 0
       }
      ],
      "note": "",
      "showNoteWhenEmpty": false,
      "xColumn": "_time",
      "yColumn": "_value",
      "shadeBelow": true,
      "position": "overlaid",
      "timeFormat": ""
     }
    }
   },
   {
    "type": "view",
    "id": "05b4cce2f92f8000",
    "attributes": {
     "name": "New Strains by Region",
     "properties": {
      "shape": "chronograf-v2",
      "queries": [
       {
        "text": "\n// Values to filter for\nfilter_values = [v.filter_values]\n\n// filtering field name\nfilter_field_name = v.filter_field_name\n\n// set drop columns\ndrop_cols = \n     if filter_field_name == \"country\"\n        then [\"region\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"region\"\n        then [\"country\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"division\"\n        then [\"country\",\"region\", \"first_strain\"]\n      else []\n\n// value flips the behavior from white list to blacklist\ninclude_fields = (v.exclude == \"0\")\n\nfrom(bucket: \"test\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == v.Measurement)\n  |> filter(fn: (r) => r[\"_field\"] == \"strainname\")\n  |> filter(fn: (r) => r[\"first_strain\"] == \"1\")\n  |> filter(fn: (r) =>\n      if filter_field_name == \"country\"\n        then contains(value: r[\"country\"], set: filter_values) == include_fields\n      else if filter_field_name == \"region\"\n        then contains(value: r[\"region\"], set: filter_values) == include_fields\n      else if filter_field_name == \"division\"\n        then contains(value: r[\"division\"], set: filter_values) == include_fields\n      else true\n  )\n  |> drop(columns: drop_cols)\n  |> window(every: 1h)\n  |> count()\n  |> duplicate(column: \"_stop\", as: \"_time\")\n  |> window(every: inf)",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [],
         "aggregateWindow": {
          "period": "auto"
         }
        }
       }
      ],
      "axes": {
       "x": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       },
       "y": {
        "bounds": [
         "",
         ""
        ],
        "label": "Infection Count",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       }
      },
      "type": "xy",
      "legend": {},
      "geom": "line",
      "colors": [
       {
        "id": "fccea49e-516c-4187-9702-b15c231d164e",
        "type": "scale",
        "hex": "#31C0F6",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "0370f34e-05ee-48c2-89ce-934d2ae091c4",
        "type": "scale",
        "hex": "#A500A5",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "498f59f4-b2b7-4af7-99aa-9ca6af1844b5",
        "type": "scale",
        "hex": "#FF7E27",
        "name": "Nineteen Eighty Four",
        "value": 0
       }
      ],
      "note": "",
      "showNoteWhenEmpty": false,
      "xColumn": "_time",
      "yColumn": "_value",
      "shadeBelow": true,
      "position": "overlaid",
      "timeFormat": ""
     }
    }
   },
   {
    "type": "view",
    "id": "05b4d742fe6f8000",
    "attributes": {
     "name": "Non Local Strains",
     "properties": {
      "shape": "chronograf-v2",
      "queries": [
       {
        "text": "// Values to filter for\nfilter_values = [v.filter_values]\n\n// filtering field name\nfilter_field_name = v.filter_field_name\n\n// set drop columns\ndrop_cols = \n     if filter_field_name == \"country\"\n        then [\"region\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"region\"\n        then [\"country\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"division\"\n        then [\"country\",\"region\", \"first_strain\"]\n      else []\n\n// value flips the behavior from white list to blacklist\ninclude_fields = (v.exclude == \"0\")\n\nfrom(bucket: \"test\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == v.Measurement)\n  |> filter(fn: (r) => r[\"_field\"] == \"strain_division\")\n  |> filter(fn: (r) => r[\"_value\"] !=  r[\"division\"])\n \n  |> filter(fn: (r) =>\n      if filter_field_name == \"country\"\n        then contains(value: r[\"country\"], set: filter_values) == include_fields\n      else if filter_field_name == \"region\"\n        then contains(value: r[\"region\"], set: filter_values) == include_fields\n      else if filter_field_name == \"division\"\n        then contains(value: r[\"division\"], set: filter_values) == include_fields\n      else true\n  )\n |> drop(columns: drop_cols)\n  |> window(every: 1h)\n  \n  |> count()\n  |> duplicate(column: \"_stop\", as: \"_time\")\n  |> window(every: inf)",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [],
         "aggregateWindow": {
          "period": "auto"
         }
        }
       }
      ],
      "axes": {
       "x": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       },
       "y": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       }
      },
      "type": "xy",
      "legend": {},
      "geom": "line",
      "colors": [
       {
        "id": "374aada3-8c34-4ecd-9740-0b7d8cf8ebf9",
        "type": "scale",
        "hex": "#FD7A5D",
        "name": "Delorean",
        "value": 0
       },
       {
        "id": "5ec07c5f-9eab-4ce0-bf83-6b2e72079771",
        "type": "scale",
        "hex": "#5F1CF2",
        "name": "Delorean",
        "value": 0
       },
       {
        "id": "9fbf0019-72d9-4014-a82a-989cc28ea4a8",
        "type": "scale",
        "hex": "#4CE09A",
        "name": "Delorean",
        "value": 0
       }
      ],
      "note": "",
      "showNoteWhenEmpty": false,
      "xColumn": "_time",
      "yColumn": "_value",
      "shadeBelow": true,
      "position": "overlaid",
      "timeFormat": ""
     }
    }
   },
   {
    "type": "view",
    "id": "05b6a7354e12a000",
    "attributes": {
     "name": "New Strains by Region",
     "properties": {
      "shape": "chronograf-v2",
      "type": "histogram",
      "queries": [
       {
        "text": "// Values to filter for\nfilter_values = [v.filter_values]\n\n// filtering field name\nfilter_field_name = v.filter_field_name\n\n// set drop columns\ndrop_cols = \n     if filter_field_name == \"country\"\n        then [\"region\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"region\"\n        then [\"country\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"division\"\n        then [\"country\",\"region\", \"first_strain\"]\n      else []\n\n// value flips the behavior from white list to blacklisat\ninclude_fields = (v.exclude == \"0\")\n\n from(bucket: \"test\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == v.Measurement)\n  |> filter(fn: (r) => r[\"first_strain\"] == \"1\")\n  |> filter(fn: (r) => r[\"_field\"] == \"strainname\")\n  |> filter(fn: (r) =>\n      if filter_field_name == \"country\"\n        then contains(value: r[\"country\"], set: filter_values) == include_fields\n      else if filter_field_name == \"region\"\n        then contains(value: r[\"region\"], set: filter_values) == include_fields\n      else if filter_field_name == \"division\"\n        then contains(value: r[\"division\"], set: filter_values) == include_fields\n      else true\n  )\n  |> drop(columns: drop_cols)\n\n ",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [],
         "aggregateWindow": {
          "period": "auto"
         }
        }
       }
      ],
      "colors": [
       {
        "id": "fbc30c66-6507-439d-8c04-900c4f750a86",
        "type": "scale",
        "hex": "#FD7A5D",
        "name": "Delorean",
        "value": 0
       },
       {
        "id": "493c5e68-954a-45d3-8484-b021d582ac7a",
        "type": "scale",
        "hex": "#5F1CF2",
        "name": "Delorean",
        "value": 0
       },
       {
        "id": "cb2daca2-24c8-4752-93f3-928a15317ebc",
        "type": "scale",
        "hex": "#4CE09A",
        "name": "Delorean",
        "value": 0
       }
      ],
      "xColumn": "_time",
      "fillColumns": [
       "_start",
       "_stop",
       "_field",
       "_measurement",
       "region"
      ],
      "xAxisLabel": "",
      "position": "stacked",
      "binCount": 50,
      "note": "",
      "showNoteWhenEmpty": false
     }
    }
   },
   {
    "type": "view",
    "id": "05b6a7561692a000",
    "attributes": {
     "name": "Existing Strains by Region",
     "properties": {
      "shape": "chronograf-v2",
      "type": "histogram",
      "queries": [
       {
        "text": "// Values to filter for\nfilter_values = [v.filter_values]\n\n// filtering field name\nfilter_field_name = v.filter_field_name\n\n// set drop columns\ndrop_cols = \n     if filter_field_name == \"country\"\n        then [\"region\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"region\"\n        then [\"country\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"division\"\n        then [\"country\",\"region\", \"first_strain\"]\n      else []\n\n// value flips the behavior from white list to blacklisat\ninclude_fields = (v.exclude == \"0\")\n\n from(bucket: \"test\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == v.Measurement)\n  |> filter(fn: (r) => r[\"first_strain\"] == \"0\")\n  |> filter(fn: (r) => r[\"_field\"] == \"strainname\")\n  |> filter(fn: (r) =>\n      if filter_field_name == \"country\"\n        then contains(value: r[\"country\"], set: filter_values) == include_fields\n      else if filter_field_name == \"region\"\n        then contains(value: r[\"region\"], set: filter_values) == include_fields\n      else if filter_field_name == \"division\"\n        then contains(value: r[\"division\"], set: filter_values) == include_fields\n      else true\n  )\n  |> drop(columns: drop_cols)\n\n ",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [],
         "aggregateWindow": {
          "period": "auto"
         }
        }
       }
      ],
      "colors": [
       {
        "id": "7beabe17-c7a1-4a8a-8f3e-9501f0300e2b",
        "type": "scale",
        "hex": "#31C0F6",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "893859da-0f44-419d-841b-d459c497dfc9",
        "type": "scale",
        "hex": "#A500A5",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "88416671-8662-43e5-9875-95bc9abcdc54",
        "type": "scale",
        "hex": "#FF7E27",
        "name": "Nineteen Eighty Four",
        "value": 0
       }
      ],
      "xColumn": "_time",
      "fillColumns": [
       "_start",
       "_stop",
       "_field",
       "_measurement",
       "region"
      ],
      "xAxisLabel": "",
      "position": "stacked",
      "binCount": 50,
      "note": "",
      "showNoteWhenEmpty": false
     }
    }
   },
   {
    "type": "view",
    "id": "05b6a8a498d2a000",
    "attributes": {
     "name": "New Strains vs Existing Strains",
     "properties": {
      "shape": "chronograf-v2",
      "queries": [
       {
        "text": "// Values to filter for\nfilter_values = [v.filter_values]\n\n// filtering field name\nfilter_field_name = v.filter_field_name\n\n// set drop columns\ndrop_cols = \n     if filter_field_name == \"country\"\n        then [\"region\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"region\"\n        then [\"country\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"division\"\n        then [\"country\",\"region\", \"first_strain\"]\n      else []\n\n// value flips the behavior from white list to blacklisat\ninclude_fields = (v.exclude == \"0\")\n\nfrom(bucket: \"test\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == v.Measurement)\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n |> filter(fn: (r) =>\n      if filter_field_name == \"country\"\n        then contains(value: r[\"country\"], set: filter_values) == include_fields\n      else if filter_field_name == \"region\"\n        then contains(value: r[\"region\"], set: filter_values) == include_fields\n      else if filter_field_name == \"division\"\n        then contains(value: r[\"division\"], set: filter_values) == include_fields\n      else true\n  )\n  |> drop(columns: drop_cols)\n  |> window(every: 1h)\n  |> count()\n  |> duplicate(column: \"_stop\", as: \"_time\")\n  |> window(every: inf)\n",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [],
         "aggregateWindow": {
          "period": "auto"
         }
        }
       }
      ],
      "axes": {
       "x": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       },
       "y": {
        "bounds": [
         "",
         ""
        ],
        "label": "New strains vs Existing Strains",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       }
      },
      "type": "xy",
      "legend": {},
      "geom": "line",
      "colors": [
       {
        "id": "2e22a77d-cc87-40b7-bd19-b311394db941",
        "type": "scale",
        "hex": "#31C0F6",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "fdfd8739-cec9-4953-8c89-ca423dd8ebf2",
        "type": "scale",
        "hex": "#A500A5",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "5eb34623-831f-4877-8752-e264dace790e",
        "type": "scale",
        "hex": "#FF7E27",
        "name": "Nineteen Eighty Four",
        "value": 0
       }
      ],
      "note": "",
      "showNoteWhenEmpty": false,
      "xColumn": "_time",
      "yColumn": "_value",
      "shadeBelow": true,
      "position": "overlaid",
      "timeFormat": ""
     }
    }
   },
   {
    "type": "view",
    "id": "05b6e86fb092a000",
    "attributes": {
     "name": " D614G Mutations across Regions",
     "properties": {
      "shape": "chronograf-v2",
      "queries": [
       {
        "text": "import \"strings\"\n\n// Values to filter for\nfilter_values = [v.filter_values]\n\n// filtering field name\nfilter_field_name = v.filter_field_name\n\n// set drop columns\ndrop_cols = \n     if filter_field_name == \"country\"\n        then [\"region\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"region\"\n        then [\"country\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"division\"\n        then [\"country\",\"region\", \"first_strain\"]\n      else []\n\n// value flips the behavior from white list to blacklist\ninclude_fields = (v.exclude == \"0\")\n\nfrom(bucket: \"test\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == v.Measurement)\n  |> filter(fn: (r) => r[\"_field\"] == \"mutations\")\n  |> filter(fn: (r) =>\n      if filter_field_name == \"country\"\n        then contains(value: r[\"country\"], set: filter_values) == include_fields\n      else if filter_field_name == \"region\"\n        then contains(value: r[\"region\"], set: filter_values) == include_fields\n      else if filter_field_name == \"division\"\n        then contains(value: r[\"division\"], set: filter_values) == include_fields\n      else true\n  )\n  |> drop(columns: drop_cols)\n  |> aggregateWindow(\n      every: 24h,\n      fn: (column, tables=<-) => tables |> reduce(\n            identity: {s_mutations: 0.0, g_mutations: 0.0},\n            fn: (r, accumulator) => ({\n              s_mutations:\n                if strings.containsStr(v: r._value, substr: \"-D614G-\") then accumulator.s_mutations + 1.0\n                else accumulator.s_mutations + 0.0,\n              g_mutations:\n                if strings.containsStr(v: r._value, substr: \"--\") then accumulator.g_mutations + 1.0\n                else accumulator.g_mutations + 0.0\n            })\n        )\n    )\n  |> drop(columns: [\"g_mutations\"])\n  |> rename(columns: {s_mutations: \"_value\"})",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [],
         "aggregateWindow": {
          "period": "auto"
         }
        }
       }
      ],
      "axes": {
       "x": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       },
       "y": {
        "bounds": [
         "",
         ""
        ],
        "label": " D614G Mutations",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       }
      },
      "type": "xy",
      "legend": {},
      "geom": "line",
      "colors": [
       {
        "id": "dc3ab7f7-15e2-4c04-9b77-b66a7bd21615",
        "type": "scale",
        "hex": "#31C0F6",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "d9d5651d-7478-42d0-b014-f6d4fc0d7e92",
        "type": "scale",
        "hex": "#A500A5",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "8a2e4df1-d639-4960-ac55-ab8aa6aaaf48",
        "type": "scale",
        "hex": "#FF7E27",
        "name": "Nineteen Eighty Four",
        "value": 0
       }
      ],
      "note": "",
      "showNoteWhenEmpty": false,
      "xColumn": "_time",
      "yColumn": "_value",
      "shadeBelow": true,
      "position": "overlaid",
      "timeFormat": ""
     }
    }
   },
   {
    "type": "view",
    "id": "05b892e6741dd000",
    "attributes": {
     "name": "New Strains",
     "properties": {
      "shape": "chronograf-v2",
      "type": "gauge",
      "queries": [
       {
        "text": "// Values to filter for\nfilter_values = [v.filter_values]\n\n// filtering field name\nfilter_field_name = v.filter_field_name\n\n// set drop columns\ndrop_cols = \n     if filter_field_name == \"country\"\n        then [\"region\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"region\"\n        then [\"country\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"division\"\n        then [\"country\",\"region\", \"first_strain\"]\n      else []\n\n// value flips the behavior from white list to blacklisat\ninclude_fields = (v.exclude == \"0\")\n\nfrom(bucket: \"test\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == v.Measurement)\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"first_strain\"] == \"1\")\n  |> filter(fn: (r) =>\n      if filter_field_name == \"country\"\n        then contains(value: r[\"country\"], set: filter_values) == include_fields\n      else if filter_field_name == \"region\"\n        then contains(value: r[\"region\"], set: filter_values) == include_fields\n      else if filter_field_name == \"division\"\n        then contains(value: r[\"division\"], set: filter_values) == include_fields\n      else true\n  )\n  |> drop(columns: drop_cols)\n  |> count()\n",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [],
         "aggregateWindow": {
          "period": "auto"
         }
        }
       }
      ],
      "prefix": "",
      "tickPrefix": "",
      "suffix": "",
      "tickSuffix": "",
      "colors": [
       {
        "id": "0",
        "type": "min",
        "hex": "#FFD255",
        "name": "thunder",
        "value": 0
       },
       {
        "id": "1",
        "type": "max",
        "hex": "#7A65F2",
        "name": "star",
        "value": 100
       }
      ],
      "decimalPlaces": {
       "isEnforced": true,
       "digits": 2
      },
      "note": "",
      "showNoteWhenEmpty": false
     }
    }
   },
   {
    "type": "view",
    "id": "05b8943a655dd000",
    "attributes": {
     "name": "Existing Strains",
     "properties": {
      "shape": "chronograf-v2",
      "type": "gauge",
      "queries": [
       {
        "text": "// Values to filter for\nfilter_values = [v.filter_values]\n\n// filtering field name\nfilter_field_name = v.filter_field_name\n\n// set drop columns\ndrop_cols = \n     if filter_field_name == \"country\"\n        then [\"region\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"region\"\n        then [\"country\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"division\"\n        then [\"country\",\"region\", \"first_strain\"]\n      else []\n\n// value flips the behavior from white list to blacklisat\ninclude_fields = (v.exclude == \"0\")\n\nfrom(bucket: \"test\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == v.Measurement)\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"first_strain\"] == \"0\")\n|> filter(fn: (r) =>\n      if filter_field_name == \"country\"\n        then contains(value: r[\"country\"], set: filter_values) == include_fields\n      else if filter_field_name == \"region\"\n        then contains(value: r[\"region\"], set: filter_values) == include_fields\n      else if filter_field_name == \"division\"\n        then contains(value: r[\"division\"], set: filter_values) == include_fields\n      else true\n  )\n  |> drop(columns: drop_cols)\n\n   |> count()\n",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [],
         "aggregateWindow": {
          "period": "auto"
         }
        }
       }
      ],
      "prefix": "",
      "tickPrefix": "",
      "suffix": "",
      "tickSuffix": "",
      "colors": [
       {
        "id": "0",
        "type": "min",
        "hex": "#00C9FF",
        "name": "laser",
        "value": 0
       },
       {
        "id": "1",
        "type": "max",
        "hex": "#9394FF",
        "name": "comet",
        "value": 100
       }
      ],
      "decimalPlaces": {
       "isEnforced": true,
       "digits": 2
      },
      "note": "",
      "showNoteWhenEmpty": false
     }
    }
   },
   {
    "type": "view",
    "id": "05ba7b9be9404000",
    "attributes": {
     "name": "Deaths vs Strains",
     "properties": {
      "shape": "chronograf-v2",
      "queries": [
       {
        "text": "import \"math\"\n\n// Values to filter for\nfilter_values = [v.filter_values]\n\n// filtering field name\nfilter_field_name = v.filter_field_name\n\n// set drop columns\ndrop_cols = \n     if filter_field_name == \"country\"\n        then [\"region\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"region\"\n        then [\"country\",\"division\", \"first_strain\"]\n      else if filter_field_name == \"division\"\n        then [\"country\",\"region\", \"first_strain\"]\n      else []\n\n// value flips the behavior from white list to blacklisat\ninclude_fields = (v.exclude == \"0\")\n\nt1 = from(bucket: \"test\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == v.Measurement)\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) =>\n      if filter_field_name == \"country\"\n        then contains(value: r[\"country\"], set: filter_values) == include_fields\n      else if filter_field_name == \"region\"\n        then contains(value: r[\"region\"], set: filter_values) == include_fields\n      else if filter_field_name == \"division\"\n        then contains(value: r[\"division\"], set: filter_values) == include_fields\n      else true\n  )\n  |> drop(columns: drop_cols)\n  |> aggregateWindow(\n    every: 24h,\n    fn: count\n  )\nt2 = from(bucket: \"test\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"deaths\")\n  |> filter(fn: (r) => r[\"_field\"] == \"positives\")\n|> filter(fn: (r) =>\n      if filter_field_name == \"country\"\n        then contains(value: r[\"country\"], set: filter_values) == include_fields\n      else if filter_field_name == \"region\"\n        then contains(value: r[\"region\"], set: filter_values) == include_fields\n      else if filter_field_name == \"division\"\n        then contains(value: r[\"division\"], set: filter_values) == include_fields\n      else true\n  )\n  |> map(fn: (r) => ({ r with _value:  if r._value > 0 \n    then int(v:math.log(x: r._value) )\n    else 0}))\n  |> drop(columns: drop_cols)\n    |> sort(columns: [\"_time\"])\n    |> aggregateWindow(every: 24h, column: \"_value\",fn: sum)\n\nunion(tables: [t1, t2])\n  |> sort(columns: [\"_time\"], desc: false)\n \n\n \n\n\n\n\n\n\n\n    \n\n",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [],
         "aggregateWindow": {
          "period": "auto"
         }
        }
       }
      ],
      "axes": {
       "x": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       },
       "y": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       }
      },
      "type": "xy",
      "legend": {},
      "geom": "monotoneX",
      "colors": [
       {
        "id": "7e5a7999-098d-4872-a81f-33e16b48d68b",
        "type": "scale",
        "hex": "#FD7A5D",
        "name": "Delorean",
        "value": 0
       },
       {
        "id": "c2b25207-2dbc-468e-accb-2a50147f21fe",
        "type": "scale",
        "hex": "#5F1CF2",
        "name": "Delorean",
        "value": 0
       },
       {
        "id": "d618294e-90cb-4105-adcc-41aaa867feff",
        "type": "scale",
        "hex": "#4CE09A",
        "name": "Delorean",
        "value": 0
       }
      ],
      "note": "",
      "showNoteWhenEmpty": false,
      "xColumn": "_time",
      "yColumn": "_value",
      "shadeBelow": false,
      "position": "overlaid",
      "timeFormat": ""
     }
    }
   },
   {
    "id": "05b6a9df4f52a000",
    "type": "variable",
    "attributes": {
     "name": "Measurement",
     "arguments": {
      "type": "map",
      "values": {
       "measurement": "strains"
      }
     },
     "selected": [
      "measurement"
     ]
    },
    "relationships": {
     "label": {
      "data": [
       {
        "type": "label",
        "id": "05baaeb1394df000"
       }
      ]
     }
    }
   },
   {
    "id": "05ba8608dd804000",
    "type": "variable",
    "attributes": {
     "name": "exclude",
     "arguments": {
      "type": "map",
      "values": {
       "exclude": "1",
       "include": "0"
      }
     },
     "selected": [
      "include"
     ]
    },
    "relationships": {
     "label": {
      "data": []
     }
    }
   },
   {
    "id": "05ba865f63c04000",
    "type": "variable",
    "attributes": {
     "name": "filter_field_name",
     "arguments": {
      "type": "map",
      "values": {
       "country": "country",
       "division": "division",
       "region": "region"
      }
     },
     "selected": [
      "region"
     ]
    },
    "relationships": {
     "label": {
      "data": []
     }
    }
   },
   {
    "id": "05ba86cc01404000",
    "type": "variable",
    "attributes": {
     "name": "filter_values",
     "arguments": {
      "type": "map",
      "values": {
       "Africa": "Africa",
       "Asia": "Asia",
       "Europe": "Europe",
       "North-America": "North-America",
       "Oceania": "Oceania",
       "South-America": "South-America",
       "US": "USA",
       "none": ""
      }
     },
     "selected": [
      "Asia"
     ]
    },
    "relationships": {
     "label": {
      "data": []
     }
    }
   }
  ]
 },
 "labels": []
}
